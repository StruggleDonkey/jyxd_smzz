<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jyxd.web.dao.dictionary.CommentItemDao">

    <resultMap id="commentItemDictionaryMap" type="com.jyxd.web.data.dictionary.CommenItemDictionary">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="common_item_code" property="commonItemCode" jdbcType="VARCHAR"/>
        <result column="common_item_name" property="commonItemName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
    </resultMap>
    
    <sql id="commentItemDictionary_colums">id,common_item_code,common_item_name,status,type,description</sql>
    <sql id="commentItemDictionary_propertys">#{id},#{commonItemCode},#{commonItemName},#{status},#{type},#{description}</sql>
    <sql id="commentItemDictionary_update">common_item_code=#{commonItemCode},common_item_name=#{commonItemName},status=#{status},type=#{type},description=#{description}</sql>

    <insert id="insert">
        insert into
        dict_common_item(<include refid="commentItemDictionary_colums"></include>)
        values (<include refid="commentItemDictionary_propertys"></include>)
    </insert>

    <update id="update" parameterType="com.jyxd.web.data.dictionary.CommenItemDictionary" >
        update dict_common_item
        set <include refid="commentItemDictionary_update"></include>
        where
          id=#{id}
    </update>

    <select id="queryData" resultMap="commentItemDictionaryMap" parameterType="java.lang.String">
        select
          <include refid="commentItemDictionary_colums"></include>
        from
        dict_common_item
        where
          id=#{id}
    </select>

    <select id="queryList" resultMap="commentItemDictionaryMap">
        select
          <include refid="commentItemDictionary_colums"></include>
        from
        dict_common_item
        where
          1=1
        and  status != -1
        <if test="commonItemName != null and commonItemName != ''">
            and  common_item_name like '%${commonItemName}%'
        </if>
        <if test="commonItemCode != null and commonItemCode != ''">
            and  common_item_code like '%${commonItemCode}%'
        </if>
        <if test="type != null and type != ''">
            and  type = #{type}
        </if>
        <if test="status != null ">
            and  status= #{status}
        </if>
        <if test="start != null and start != ''">limit #{start},</if>
        <if test="size != null and size != ''">#{size}</if>
    </select>

    <select id="getList" resultType="java.util.Map">
        select
            dci.id,
            dci.common_item_code,
            dci.common_item_name,
            dci.status,
            dci.type,
            dci.description,
            dc.common_name
        from
          dict_common_item dci
        left join dict_common dc on dc.type=dci.type
        where
          1=1
        and  dci.status != -1
        and dc.status != -1
        <if test="commonItemName != null and commonItemName != ''">
            and  dci.common_item_name like '%${commonItemName}%'
        </if>
        <if test="commonItemCode != null and commonItemCode != ''">
            and  dci.common_item_code like '%${commonItemCode}%'
        </if>
        <if test="type != null and type != ''">
            and  dci.type = #{type}
        </if>
        <if test="status != null ">
            and  dci.status= #{status}
        </if>
        <if test="commonStatus != null ">
            and  dc.status= #{commonStatus}
        </if>
        <if test="start != null ">limit #{start},</if>
        <if test="size != null ">#{size}</if>
    </select>

    <select id="queryNum" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
          count(dci.id)
        from
        dict_common_item dci
        left join dict_common dc on dc.type=dci.type
        where
        1=1
        and  dci.status != -1
        and dc.status != -1
        <if test="commonItemName != null and commonItemName != ''">
            and  dci.common_item_name like '%${commonItemName}%'
        </if>
        <if test="commonItemCode != null and commonItemCode != ''">
            and  dci.common_item_code like '%${commonItemCode}%'
        </if>
        <if test="type != null and type != ''">
            and  dci.type = #{type}
        </if>
        <if test="status != null ">
            and  dci.status= #{status}
        </if>
        <if test="commonStatus != null ">
            and  dc.status= #{commonStatus}
        </if>
    </select>

    <select id="getCodeListByType" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            IFNULL(dci.id, "") AS id,
            IFNULL(dci.common_item_code, "") AS code,
            IFNULL(dci.common_item_name, "") AS itemName,
            IFNULL(dci.type, "") AS type,
            IFNULL(dci.description, "") AS description,
            IFNULL(dc.common_name, "") AS name
        FROM
          dict_common_item dci
        LEFT JOIN dict_common dc ON dc.type = dci.type
        WHERE
          1 = 1
        AND dci.status !=- 1
        AND dc.status !=- 1
        <if test="type != null and type != ''">
            AND dci.type = #{type}
        </if>
        <if test="status != null ">
            AND dci.status = #{status}
            AND dc.status = #{status}
        </if>
        ORDER BY dci.common_item_name
    </select>

    <select id="getNamesByCodes" resultType="java.lang.String" parameterType="java.util.Map">
        SELECT
            GROUP_CONCAT(common_item_name ORDER BY common_item_code)
        FROM
            dict_common_item
        WHERE
        status !=-1
        AND FIND_IN_SET(common_item_code,#{codes})
        AND type = #{type}
    </select>

    <!-- 根据type 获取多个名称（以 空格分隔） -->
    <select id="getNamesByType" resultType="java.lang.String" parameterType="java.util.Map">
        SELECT
        GROUP_CONCAT(concat(common_item_name,description) ORDER BY common_item_code separator ' ')
        FROM
            dict_common_item
        WHERE
           status !=-1
        AND type = #{type}
    </select>

    <select id="queryDataListByType" resultMap="commentItemDictionaryMap" parameterType="java.util.Map">
        select
        <include refid="commentItemDictionary_colums"></include>
        from
        dict_common_item
        where
        status !=-1
        <if test="type != null and type != ''">
            and  type = #{type}
        </if>
    </select>

</mapper>
