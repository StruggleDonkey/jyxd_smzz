<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jyxd.web.dao.basic.BasicNursingDao">

    <resultMap id="basicNursingMap" type="com.jyxd.web.data.basic.BasicNursing">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="visit_id" property="visitId" jdbcType="VARCHAR"/>
        <result column="visit_code" property="visitCode" jdbcType="VARCHAR"/>
        <result column="patient_id" property="patientId" jdbcType="VARCHAR"/>
        <result column="data_time" property="dataTime" />
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" />
        <result column="operator_code" property="operatorCode" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    
    <sql id="basicNursing_colums">id,visit_id,visit_code,patient_id,data_time,code,content,create_time,operator_code,status</sql>

    <sql id="basicNursing_propertys">#{id},#{visitId},#{visitCode},#{patientId},#{dataTime},#{code},
                                  #{content},#{createTime},#{operatorCode},#{status}</sql>

    <sql id="basicNursing_update">visit_id=#{visitId},visit_code=#{visitCode},patient_id=#{patientId},
                              data_time=#{dataTime},code=#{code},content=#{content},create_time=#{createTime},
                              operator_code=#{operatorCode},status=#{status}</sql>

    <insert id="insert">
        insert into
        table_basic_nursing(<include refid="basicNursing_colums"></include>)
        values (<include refid="basicNursing_propertys"></include>)
    </insert>

    <update id="update" parameterType="com.jyxd.web.data.basic.BasicNursing" >
        update
        table_basic_nursing
        set <include refid="basicNursing_update"></include>
        where
          id=#{id}
    </update>

    <select id="queryData" resultMap="basicNursingMap" parameterType="java.lang.String">
        select
          <include refid="basicNursing_colums"></include>
        from
        table_basic_nursing
        where
        id=#{id}
    </select>

    <select id="queryList" resultType="java.util.Map">
        select
        <include refid="basicNursing_colums"></include>
        from
        table_basic_nursing
        where
        1=1
        and  status != -1
        <if test="content != null and content != ''">
            and  content like '%${content}%'
        </if>
        <if test="status != null ">
            and  status= #{status}
        </if>
        <if test="start != null ">limit #{start},</if>
        <if test="size != null ">#{size}</if>
    </select>

    <select id="queryNum" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
          count(id)
        from
        table_basic_nursing
        where
        1=1
        and  status != -1
        <if test="content != null and content != ''">
            and  content like '%${content}%'
        </if>
        <if test="status != null ">
            and  status= #{status}
        </if>
    </select>

    <select id="getNursingList" resultType="java.util.Map">
        SELECT
            pp.id,
            pp.name,
            pp.visit_id,
            pp.visit_code,
            pp.bed_code,
            CASE WHEN tbn.code='体温' THEN tbn.content END as 体温,
            CASE WHEN tbn.code='心率' THEN tbn.content END as 心率,
            CASE WHEN tbn.code='脉搏' THEN tbn.content END as 脉搏,
            CASE WHEN tbn.code='呼吸' THEN tbn.content END as 呼吸,
            CASE WHEN tbn.code='有创血压' THEN tbn.content END as 有创血压,
            CASE WHEN tbn.code='无创血压' THEN tbn.content END as 无创血压,
            CASE WHEN tbn.code='SpO₂' THEN tbn.content END as SpO₂,
            CASE WHEN tbn.code='cmH₂O' THEN tbn.content END as cmH₂O,
            CASE WHEN tbn.code='mmHg' THEN tbn.content END as mmHg
        FROM
            p_patient pp LEFT JOIN table_basic_nursing tbn ON pp.id=tbn.patient_id
        WHERE
            pp.flag = 1
        AND pp.bed_code != ""
        AND date_format(tbn.data_time,'%Y-%m-%d %H:%i')=date_format(#{time},'%Y-%m-%d %H:%i')
        union
        SELECT
            pp.id,
            pp.name,
            pp.visit_id,
            pp.visit_code,
            pp.bed_code,
            CASE WHEN tbn.code='体温' THEN tbn.content END as 体温,
            CASE WHEN tbn.code='心率' THEN tbn.content END as 心率,
            CASE WHEN tbn.code='脉搏' THEN tbn.content END as 脉搏,
            CASE WHEN tbn.code='呼吸' THEN tbn.content END as 呼吸,
            CASE WHEN tbn.code='有创血压' THEN tbn.content END as 有创血压,
            CASE WHEN tbn.code='无创血压' THEN tbn.content END as 无创血压,
            CASE WHEN tbn.code='SpO₂' THEN tbn.content END as SpO₂,
            CASE WHEN tbn.code='cmH₂O' THEN tbn.content END as cmH₂O,
            CASE WHEN tbn.code='mmHg' THEN tbn.content END as mmHg
        FROM
            p_patient pp LEFT JOIN table_basic_nursing tbn ON pp.id=tbn.patient_id
        WHERE
            pp.flag = 1
        AND pp.bed_code != ""
    </select>

    <!-- 根据病人id 时间 code  查询基础护理对象 -->
    <select id="getDataByPatientIdAndCodeAndTime" resultMap="basicNursingMap" parameterType="java.util.Map">
        SELECT
        <include refid="basicNursing_colums"></include>
        FROM
        table_basic_nursing
        WHERE
        1 = 1
        AND status !=- 1
        <if test="code != null and code != ''">
            AND code = #{code}
        </if>
        <if test="patientId != null and patientId != ''">
            AND patient_id = #{patientId}
        </if>
        <if test="status != null ">
            and  status= #{status}
        </if>
        <if test="dataTime != null and dataTime != ''">
            AND date_format(data_time, '%Y-%m-%d %H:%i') = date_format(
            #{dataTime},
            '%Y-%m-%d %H:%i'
            )
        </if>
    </select>

    <!-- 根据病人id 时间 查询基础护理对象列表 -->
    <select id="queryListByPatientIdAndTime" resultMap="basicNursingMap" parameterType="java.util.Map">
        SELECT
        <include refid="basicNursing_colums"></include>
        FROM
        table_basic_nursing
        WHERE
        1 = 1
        AND status !=- 1
        <if test="patientId != null and patientId != ''">
            AND patient_id = #{patientId}
        </if>
        <if test="status != null ">
            and  status= #{status}
        </if>
        <if test="dataTime != null and dataTime != ''">
            AND date_format(data_time, '%Y-%m-%d %H:%i') = date_format(
            #{dataTime},
            '%Y-%m-%d %H:%i'
            )
        </if>
    </select>

    <!-- 根据病人id 查询基础护理对象列表 -->
    <select id="getListByPatientId" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            IFNULL(tsn.patient_id,"") AS patient_id,
            date_format(tsn.data_time, '%Y-%m-%d') AS date,
            date_format(tsn.data_time, '%H:%i') AS time,
            IFNULL(max(CASE WHEN tsn.code='drainageName' THEN dcia.common_item_name END),"")  AS drainageName,
            IFNULL(max(CASE WHEN tsn.code='drainageDepth' THEN tsn.content END),"") AS drainageDepth,
            IFNULL(max(CASE WHEN tsn.code='hasExtrude' THEN tsn.content END),"") AS hasExtrude,
            IFNULL(max(CASE WHEN tsn.code='isClear' THEN tsn.content END),"") AS isClear,
            IFNULL(max(CASE WHEN tsn.code='hasReplaced' THEN dcib.common_item_name END),"")  AS hasReplaced,
            IFNULL(max(CASE WHEN tsn.code='drainageColor' THEN dcic.common_item_name END),"")  AS drainageColor,
            IFNULL(max(CASE WHEN tsn.code='veinDrainageName' THEN dcid.common_item_name END),"")  AS veinDrainageName,
            IFNULL(max(CASE WHEN tsn.code='veinDrainageDepth' THEN tsn.content END),"") AS veinDrainageDepth,
            IFNULL(max(CASE WHEN tsn.code='hasVeinNursed' THEN tsn.content END),"") AS hasVeinNursed,
            IFNULL(max(CASE WHEN tsn.code='isVeinClear' THEN tsn.content END),"") AS isVeinClear,
            IFNULL(max(CASE WHEN tsn.code='veinRemove' THEN dcie.common_item_name END),"")  AS veinRemove,
            IFNULL(max(CASE WHEN tsn.code='veinDressingChange' THEN tsn.content END),"") AS veinDressingChange,
            IFNULL(max(CASE WHEN tsn.code='arteryPosition' THEN dcif.common_item_name END),"")  AS arteryPosition,
            IFNULL(max(CASE WHEN tsn.code='isArteryClear' THEN tsn.content END),"") AS isArteryClear,
            IFNULL(max(CASE WHEN tsn.code='intubationNursing' THEN tsn.content END),"") AS intubationNursing,
            IFNULL(max(CASE WHEN tsn.code='tracheotomyNursing' THEN tsn.content END),"") AS tracheotomyNursing,
            IFNULL(max(CASE WHEN tsn.code='hasAtomizeInhale' THEN tsn.content END),"") AS hasAtomizeInhale,
            IFNULL(max(CASE WHEN tsn.code='hasSuckedSputum' THEN tsn.content END),"") AS hasSuckedSputum,
            IFNULL(max(CASE WHEN tsn.code='sputumDegree' THEN dcig.common_item_name END),"")  AS sputumDegree,
            IFNULL(max(CASE WHEN tsn.code='sputumColor' THEN dcih.common_item_name END),"")  AS sputumColor,
            IFNULL(max(CASE WHEN tsn.code='hasCleanedMouth' THEN tsn.content END),"") AS hasCleanedMouth,
            IFNULL(max(CASE WHEN tsn.code='hasCleanedUrethraHole' THEN tsn.content END),"") AS hasCleanedUrethraHole,
            IFNULL(max(CASE WHEN tsn.code='hasCleanedPerineum' THEN tsn.content END),"") AS hasCleanedPerineum,
            IFNULL(max(CASE WHEN tsn.code='constraintPosition' THEN dcii.common_item_name END),"")  AS constraintPosition,
            IFNULL(max(CASE WHEN tsn.code='constraintPositionCondition' THEN dcij.common_item_name END),"")  AS constraintPositionCondition,
            IFNULL(max(CASE WHEN tsn.code='hasClapBack' THEN tsn.content END),"") AS hasClapBack,
            IFNULL(max(CASE WHEN tsn.code='hasVibrateExcreteSputum' THEN tsn.content END),"") AS hasVibrateExcreteSputum,
            IFNULL(max(CASE WHEN tsn.code='airPressureTreatment' THEN tsn.content END),"") AS airPressureTreatment,
            IFNULL(max(CASE WHEN tsn.code='isSkinOk' THEN tsn.content END),"") AS isSkinOk,
            IFNULL(max(CASE WHEN tsn.code='skinNursing' THEN tsn.content END),"") AS skinNursing,
            IFNULL(max(CASE WHEN tsn.code='bodyPosition' THEN dcim.common_item_name END),"")  AS bodyPosition,
            IFNULL(max(CASE WHEN tsn.code='basicNursing' THEN tsn.content END),"") AS basicNursing,
            IFNULL(max(CASE WHEN tsn.code='signature' THEN tu.user_name END),"")  AS signature
        FROM table_basic_nursing tsn LEFT JOIN dict_common_item dcia ON dcia.common_item_code=tsn.content AND dcia.type='drainage_tube'
        LEFT JOIN dict_common_item dcib ON dcib.common_item_code=tsn.content AND dcib.type='drainage_state'
        LEFT JOIN dict_common_item dcic ON dcic.common_item_code=tsn.content AND dcic.type='drainage_color'
        LEFT JOIN dict_common_item dcid ON dcid.common_item_code=tsn.content AND dcid.type='vein_catheter'
        LEFT JOIN dict_common_item dcie ON dcie.common_item_code=tsn.content AND dcie.type='vein_drainage_state'
        LEFT JOIN dict_common_item dcif ON dcif.common_item_code=tsn.content AND dcif.type='artery'
        LEFT JOIN dict_common_item dcig ON dcig.common_item_code=tsn.content AND dcig.type='sputum_degree'
        LEFT JOIN dict_common_item dcih ON dcih.common_item_code=tsn.content AND dcih.type='sputum_color'
        LEFT JOIN dict_common_item dcii ON dcii.common_item_code=tsn.content AND dcii.type='constraint_position'
        LEFT JOIN dict_common_item dcij ON dcij.common_item_code=tsn.content AND dcij.type='constraint_position_condition'
        LEFT JOIN dict_common_item dcim ON dcim.common_item_code=tsn.content AND dcim.type='position'
        LEFT JOIN table_user tu ON tu.login_name=tsn.content
        WHERE 1=1
        AND tsn.status !=- 1
        AND tsn.status=#{status}
        AND tsn.patient_id=#{patientId}
        GROUP BY tsn.data_time
    </select>

    <!-- 根据病人id查询某个时间段内静脉置管信息 -->
    <select id="getVeinDrainage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            IFNULL(tsn.patient_id,"") AS patient_id,
            date_format(tsn.data_time, '%Y-%m-%d') AS date,
            date_format(tsn.data_time, '%H:%i') AS time,
            IFNULL(max(CASE WHEN tsn.code='veinDrainageName' THEN dcid.common_item_name END),"")  AS veinDrainageName,
            IFNULL(max(CASE WHEN tsn.code='veinDrainageDepth' THEN tsn.content END),"") AS veinDrainageDepth,
            IFNULL(max(CASE WHEN tsn.code='hasVeinNursed' THEN tsn.content END),"") AS hasVeinNursed,
            IFNULL(max(CASE WHEN tsn.code='isVeinClear' THEN tsn.content END),"") AS isVeinClear,
            IFNULL(max(CASE WHEN tsn.code='veinRemove' THEN dcie.common_item_name END),"")  AS veinRemove,
            IFNULL(max(CASE WHEN tsn.code='veinDressingChange' THEN tsn.content END),"") AS veinDressingChange
        FROM table_basic_nursing tsn
        LEFT JOIN dict_common_item dcid ON dcid.common_item_code=tsn.content AND dcid.type='vein_catheter'
        LEFT JOIN dict_common_item dcie ON dcie.common_item_code=tsn.content AND dcie.type='vein_drainage_state'
        WHERE 1=1
        AND tsn.status !=- 1
        AND tsn.status=#{status}
        AND tsn.patient_id=#{patientId}
        AND date_format(data_time, '%Y-%m-%d %H:%i') BETWEEN #{startTime} AND #{endTime}
        GROUP BY tsn.data_time
    </select>

    <!-- 根据病人id查询某个时间段内动脉置管信息 -->
    <select id="getArtery" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            IFNULL(tsn.patient_id,"") AS patient_id,
            date_format(tsn.data_time, '%Y-%m-%d') AS date,
            date_format(tsn.data_time, '%H:%i') AS time,
            IFNULL(max(CASE WHEN tsn.code='arteryPosition' THEN dcif.common_item_name END),"")  AS arteryPosition,
            IFNULL(max(CASE WHEN tsn.code='isArteryClear' THEN tsn.content END),"") AS isArteryClear
        FROM table_basic_nursing tsn
        LEFT JOIN dict_common_item dcif ON dcif.common_item_code=tsn.content AND dcif.type='artery'
        WHERE 1=1
        AND tsn.status !=- 1
        AND tsn.status=#{status}
        AND tsn.patient_id=#{patientId}
        AND date_format(data_time, '%Y-%m-%d %H:%i') BETWEEN #{startTime} AND #{endTime}
        GROUP BY tsn.data_time
    </select>

   <!--  根据病人id查询某个时间段内引流管信息 -->
    <select id="getDrainage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            IFNULL(tsn.patient_id,"") AS patient_id,
            date_format(tsn.data_time, '%Y-%m-%d') AS date,
            date_format(tsn.data_time, '%H:%i') AS time,
            IFNULL(max(CASE WHEN tsn.code='drainageName' THEN dcia.common_item_name END),"")  AS drainageName,
            IFNULL(max(CASE WHEN tsn.code='drainageDepth' THEN tsn.content END),"") AS drainageDepth,
            IFNULL(max(CASE WHEN tsn.code='hasExtrude' THEN tsn.content END),"") AS hasExtrude,
            IFNULL(max(CASE WHEN tsn.code='isClear' THEN tsn.content END),"") AS isClear,
            IFNULL(max(CASE WHEN tsn.code='hasReplaced' THEN dcib.common_item_name END),"")  AS hasReplaced,
            IFNULL(max(CASE WHEN tsn.code='drainageColor' THEN dcic.common_item_name END),"")  AS drainageColor
        FROM table_basic_nursing tsn LEFT JOIN dict_common_item dcia ON dcia.common_item_code=tsn.content AND dcia.type='drainage_tube'
        LEFT JOIN dict_common_item dcib ON dcib.common_item_code=tsn.content AND dcib.type='drainage_state'
        LEFT JOIN dict_common_item dcic ON dcic.common_item_code=tsn.content AND dcic.type='drainage_color'
        WHERE 1=1
        AND tsn.status !=- 1
        AND tsn.status=#{status}
        AND tsn.patient_id=#{patientId}
        AND date_format(data_time, '%Y-%m-%d %H:%i') BETWEEN #{startTime} AND #{endTime}
        GROUP BY tsn.data_time
    </select>

</mapper>
